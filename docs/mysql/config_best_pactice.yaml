#https://www.alexedwards.net/blog/configuring-sqldb
open_and_idle_connection:
- object is a pool contains both idle and 'in-use' connections
- a connections is marked as in-use when u are using it to execute data task, like query 
- when task is completed the connection is marked as idle 
- when u need a connectin, sql.DB will first check if any idle connections ara already available in the pool 
- if have no, Go will create new additional connection
- MAX open connection benchmark
  BenchmarkMaxOpenConns1-8                 500       3129633 ns/op         478 B/op         10 allocs/op
  BenchmarkMaxOpenConns2-8                1000       2181641 ns/op         470 B/op         10 allocs/op
  BenchmarkMaxOpenConns5-8                2000        859654 ns/op         493 B/op         10 allocs/op
  BenchmarkMaxOpenConns10-8               2000        545394 ns/op         510 B/op         10 allocs/op
  BenchmarkMaxOpenConnsUnlimited-8        2000        531030 ns/op         479 B/op          9 allocs/op


setMaxOpenConns:
- total in-use and idle connection
- if set maxOpenConns is 5 and u have 5 connections are in-use, Go will force wait until one of the 5 connections is freed up

setMaxIdleConns:
- by default sql.DB max idle conns is 2
- Maximum number of idle (unused but open) connections to retain in the pool.

Merge index:
https://dev.mysql.com/doc/refman/8.0/en/index-merge-optimization.html

